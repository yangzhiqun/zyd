var timeFn = null;
//var data = {"cycq":{"x":[],"y":[]},"jycq":{"x":[],"y":[]},"hcczcq":{"x":[],"y":[]},"yycq":{"x":[],"y":[]}}
function chart(info){
	var option1 = {
        title: {
            text: '抽样超期统计'            
        },
        tooltip: {
            trigger: 'axis'
        },
        /*legend: {
            data:['最低气温']
        },*/
        toolbox: {
            show: true,
            feature: {
                dataZoom: {
                    yAxisIndex: 'none'
                },
                dataView: {readOnly: false},
                magicType: {type: ['line', 'bar']},
                restore: {},
                saveAsImage: {}
            }
        },
        grid: { // 控制图的大小，调整下面这些值就可以，
          //  x: 40,
          //  x2: 100,
            y2: 150// y2可以控制 X轴跟Zoom控件之间的间隔，避免以为倾斜后造成 label重叠到zoom上
        },
        xAxis:  {
            type: 'category',
           // boundaryGap: false,
            //data: ['抽样单位1','抽样单位2','抽样单位3','抽样单位4','抽样单位5','抽样单位6','抽样单位7']
            axisLabel: {
                formatter: function(value){
                    var ret = "";//拼接加\n返回的类目项
                    var maxLength = 2;//每项显示文字个数
                    var valLength = value.length;//X轴类目项的文字个数
                    var rowN = Math.ceil(valLength / maxLength); //类目项需要换行的行数
                    if (rowN > 1)//如果类目项的文字大于3,
                    {
                        for (var i = 0; i < rowN; i++) {
                            var temp = "";//每次截取的字符串
                            var start = i * maxLength;//开始截取的位置
                            var end = start + maxLength;//结束截取的位置
                            //这里也可以加一个是否是最后一行的判断，但是不加也没有影响，那就不加吧
                            temp = value.substring(start, end) + "\n";
                            ret += temp; //凭借最终的字符串
                        }
                        return ret;
                    }
                    else {
                        return value;
                    }
                }
            },
            data: info[0].xAxis[0].data
        },
        yAxis: {
        	name:'数量',
            type: 'value',
            axisLabel: {
                formatter: '{value}批'
            },
            axisLine:{
                lineStyle:{
                    color:'#000'
                }
            }
        },
        series: [
            {
                name:'截止今天抽样超期数量',
                type:'bar',
                itemStyle: {
                    normal: {
                        // 随机显示
                        color:function(d){
                            return "#"+Math.floor(Math.random()*(256*256*256-1)).toString(16);
                        }
                        //定制显示
                       /* color: function(params) {
                            // build a color map as your need.
                            var colorList = [
                                '#C1232B','#B5C334','#FCCE10','#E87C25','#27727B',
                                '#FE8463','#9BCA63','#FAD860','#F3A43B','#60C0DD',
                                '#D7504B','#C6E579','#F4E001','#F0805A','#26C0C0',
                                '#EFE42A','#C33531','#EE9201','#29AAE3','#64BD3D',
                                '#64BD3D','#0AAF9F','#26C0C0','#26C0C0','#26C0C0',
                                '#26C0C0','#26C0C0','#26C0C0','#26C0C0','#26C0C0',
                                '#26C0C0','#26C0C0','#26C0C0','#26C0C0','#26C0C0'
                            ];
                            return colorList[params.dataIndex]
                        }*/
                        ,
                        label: {
                            show: true
                           // position: 'top',
                           // formatter: '{b}\n{c}'
                        }
                    }
                },
                data:info[0].series[0].data

            }
        ]
    };
    var myChart1=echarts.init(document.getElementById('chart_1'));
    myChart1.setOption(option1);
    var option2 = {
        title: {
            text: '检验超期统计'            
        },
        tooltip: {
            trigger: 'axis'
        },
        toolbox: {
            show: true,
            feature: {
                dataZoom: {
                    yAxisIndex: 'none'
                },
                dataView: {readOnly: false},
                magicType: {type: ['line', 'bar']},
                restore: {},
                saveAsImage: {}
            }
        },
        grid: { // 控制图的大小，调整下面这些值就可以，
                  //    x: 40,
                  //   x2: 100,
                     y2: 150// y2可以控制 X轴跟Zoom控件之间的间隔，避免以为倾斜后造成 label重叠到zoom上
         },
        xAxis:  {
            type: 'category',
           // boundaryGap: false,
            axisLabel: {
                interval: 0,
                formatter: function(value){
                    //debugger
                    var ret = "";//拼接加\n返回的类目项
                    var maxLength = 2;//每项显示文字个数
                    var valLength = value.length;//X轴类目项的文字个数
                    var rowN = Math.ceil(valLength / maxLength); //类目项需要换行的行数
                    if (rowN > 1)//如果类目项的文字大于3,
                    {
                        for (var i = 0; i < rowN; i++) {
                            var temp = "";//每次截取的字符串
                            var start = i * maxLength;//开始截取的位置
                            var end = start + maxLength;//结束截取的位置
                            //这里也可以加一个是否是最后一行的判断，但是不加也没有影响，那就不加吧
                            temp = value.substring(start, end) + "\n";
                            ret += temp; //凭借最终的字符串
                        }
                        return ret;
                    }
                    else {
                        return value;
                    }
                }
            },
            data: info[1].xAxis[0].data
        },
        yAxis: {
        	name:'数量',
            type: 'value',
            axisLabel: {
                formatter: '{value}批'
            },
            axisLine:{
                lineStyle:{
                    color:'#000'
                }
            }
        },
        series: [
            {
                name:'截止今天检验超期数量',
                type:'bar',
                itemStyle: {
                      normal: {
                          // 随机显示
                          color:function(d){
                              return "#"+Math.floor(Math.random()*(256*256*256-1)).toString(16);
                          },
                          label: {
                              show: true
                              // position: 'top',
                              // formatter: '{b}\n{c}'
                          }
                      }
                },
                data:info[1].series[0].data
            }
        ]
    };
    var myChart2=echarts.init(document.getElementById('chart_2'));
    myChart2.setOption(option2);
  /*  var Info = {"x":['合肥','芜湖','蚌埠','淮南','马鞍山','淮北','铜陵','安庆','黄山','滁州','阜阳','宿州','六安市'],"y":{
        "hclq":[200, 140, 170, 230, 245, 176, 135, 162, 132, 120, 160, 130,140],
        "hcwc":[63, 35, 52, 88, 84, 43, 56, 50, 35, 73, 37, 94,42],
        "yycq":[6, 5, 5, 8, 4, 3, 6, 0, 5, 7, 17, 4,14]
        }};*/

    var option3 = {
        title: {
            text: '核查异议超期'
        },
        tooltip: {
            trigger: 'axis',
            axisPointer: {
                type: 'cross',
                crossStyle: {
                    color: '#999'
                }
            }
        },
        toolbox: {
            feature: {
                dataView: {show: true, readOnly: false},
                magicType: {show: true, type: ['line', 'bar']},
                restore: {show: true},
                saveAsImage: {show: true}
            }
        },
        legend: {
            data:['核查领取超期','处置完成超期','异议登记超期']
        },
        grid: { // 控制图的大小，调整下面这些值就可以，
            //    x: 40,
            //   x2: 100,
            y2: 150// y2可以控制 X轴跟Zoom控件之间的间隔，避免以为倾斜后造成 label重叠到zoom上
        },
        xAxis: [
            {
                type: 'category',
                axisLabel: {
                    interval: 0,
                    formatter: function(value){
                        //debugger
                        var ret = "";//拼接加\n返回的类目项
                        var maxLength = 2;//每项显示文字个数
                        var valLength = value.length;//X轴类目项的文字个数
                        var rowN = Math.ceil(valLength / maxLength); //类目项需要换行的行数
                        if (rowN > 1)//如果类目项的文字大于3,
                        {
                            for (var i = 0; i < rowN; i++) {
                                var temp = "";//每次截取的字符串
                                var start = i * maxLength;//开始截取的位置
                                var end = start + maxLength;//结束截取的位置
                                //这里也可以加一个是否是最后一行的判断，但是不加也没有影响，那就不加吧
                                temp = value.substring(start, end) + "\n";
                                ret += temp; //凭借最终的字符串
                            }
                            return ret;
                        }
                        else {
                            return value;
                        }
                    }
                },
                data: overdue.x,
                axisPointer: {
                    type: 'shadow'
                }
            }
        ],
        yAxis: [
            {
                type: 'value',
                name: '超期数',
                min: 0,
                // max: 250,
                interval: 10,
                axisLabel: {
                    formatter: '{value} '
                }
            }
        ],
        series: [
            {
                name:'核查领取超期',
                type:'bar',
                itemStyle: {
                    normal: {
                        // 随机显示
                        color:function(d){
                            return "#"+Math.floor(Math.random()*(256*256*256-1)).toString(16);
                        },
                        label: {
                            show: true
                            // position: 'top',
                            // formatter: '{b}\n{c}'
                        }
                    }
                },
                data:overdue.y.hclq
            },
            {
                name:'处置完成超期',
                type:'bar',
                itemStyle: {
                    normal: {
                        // 随机显示
                        color:function(d){
                            return "#"+Math.floor(Math.random()*(256*256*256-1)).toString(16);
                        },
                        label: {
                            show: true
                            // position: 'top',
                            // formatter: '{b}\n{c}'
                        }
                    }
                },
                data:overdue.y.hcwc
            },
            {
                name:'异议登记超期',
                type:'bar',
                itemStyle: {
                    normal: {
                        // 随机显示
                        color:function(d){
                            return "#"+Math.floor(Math.random()*(256*256*256-1)).toString(16);
                        },
                        label: {
                            show: true
                            // position: 'top',
                            // formatter: '{b}\n{c}'
                        }
                    }
                },
                data:overdue.y.yycq
            }
        ]
    };

    var myChart3=echarts.init(document.getElementById('chart_3'))
    myChart3.setOption(option3);
    // 点击下拉框根据区域加载相应地区的数据
        $(document).on('change','select#cqtj_option',function(){
            var optionVal=$(this).val();//获取当前选中项的value值
            myChart1.hideLoading();
            myChart1.setOption({
                xAxis:[{
                    data:data[optionVal][0].xAxis[0].data
                }],
                series:[
                    {
                        data:data[optionVal][0].series[0].data
                    }
                ]
            });
            myChart2.hideLoading();
            myChart2.setOption({
                xAxis:[{
                    data:data[optionVal][1].xAxis[0].data
                }],
                series:[
                    {
                        data:data[optionVal][1].series[0].data
                    }
                ]
            });
        });

    //点击不同的市显示该市下级市县区相应的数据
    myChart3.on('click',function (params) {
        myChart3.hideLoading();
        clearTimeout(timeFn);
        //由于单击事件和双击事件冲突，故单击的响应事件延迟250毫秒执行
        timeFn = setTimeout(charts3(params.name),500);//请求后台数据
    });

    myChart3.on('dblclick',function (params) {
        myChart3.hideLoading();
        clearTimeout(timeFn);
        charts3('');
    })

    function charts3(params){
        var data ;
        if(params == ''){
            data = overdue;
        }else{
            data = company[params]
        }
        myChart3.hideLoading();
        myChart3.setOption({
            xAxis:[{
                data:data.x
            }],
            series:[
                {
                    data:data.y.hclq
                },
                {
                    data:data.y.hcwc
                },
                {
                    data:data.y.yycq
                }
            ]
        });
    }
}
