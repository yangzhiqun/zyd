<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>食品类别统计</title>
    <!-- css
    <link rel="stylesheet" href="../libs/bootstrap/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="../css/TreeGrid.css">
    <link rel="stylesheet" href="../css/reset.css">
    <link rel="stylesheet" href="../css/splbtj.css">
    -->
    <%#= stylesheet_link_tag "statistics_old/bootstrap/dist/css/bootstrap.min.css", :media => "all" %>
    <%= stylesheet_link_tag "statistics_old/TreeGrid","statistics_old/reset","statistics_old/splbtj", :media => "all" %>
    <!-- js
    <script src="../libs/treegrad/jquery-1.3.2.min.js"></script>
    <script src="../libs/echarts.js"></script>
    <script src="../libs/treegrad/TreeGrid.js"></script>
    <script src="../libs/layDate/laydate.js"></script>
    -->
    <%= javascript_include_tag "statistics/treegrad/jquery-1.3.2.min","statistics/treegrad/TreeGrid_ajax","statistics/layDate/laydate" %>
</head> 
<body>
    <div class="container">
        <!-- 头部head -->
        <div class="page-header testcompany_header">
            <h1>食品类别统计</h1>
        </div>

        <!-- 上侧按钮部分 -->
        <div class="foodcate_btn">
            <%= search_form_for @q, url: food_statistics_path, html: {role: "form"} do |f|  %>
              <div class="fillpage-date">
                <span>任务来源：</span>
                <div class="form-group foodcateSelect_btn">
                    <%= f.select :sp_s_70_eq, BaosongA.all.map { |b| [b.name, b.name] },{:include_blank =>"请选择"},class:"form-control foodcateSelect_option",id:"checkbox_optionH"%>
                </div>
              </div>
                <div class="fillpage-date" style="height:36px;">
                  <span>样品填报时间：</span>
                  <div class="form-group">
                    <%= f.label :选择时间,class:"sr-only",for:"q_time" %>
                    <%= f.text_field :time,class:"form-control",id:"time",placeholder:"选择时间",value:"#{params[:q].blank? ? '':params[:q]["time"]}" %>
                  </div>
                </div>
                <div class="taskbtn_operBox">
                  <button type="submit" class="btn btn-default taskbtn_query" id="search">查询</button>
                  <button type="submit" class="btn btn-default taskbtn_export bgc1 btn-primary" id="save">导出列表</button>
                  <input type="hidden" name="is_export" value="0" id="is_export">
                </div>
            <% end %>
        </div>

        <div id="div1" style="margin-bottom: 100px;">
            <!-- 动态加载数据 -->
        </div>
    </div>
    
</body>
    <script type="text/javascript">
        var config = {
            id: "tg1",
            width: "100%",
            renderTo: "div1",
            headerAlign: "left",
            headerHeight: "30",
            dataAlign: "left",
            indentation: "20",
            folderOpenIcon: "<%= asset_path('statistics/page-open.png') %>",
            folderCloseIcon: "<%= asset_path('statistics/page-close.png') %>",
            defaultLeafIcon: "<%= asset_path('statistics/page-none.png') %>", 
            hoverRowBackground: "false",
            folderColumnIndex: "0",
            itemClick: "itemClickEvent",
            columns:[
                {headerText: "名称", dataField: "name", headerAlign: "center",width: "240", handler: "customOrgName"},
//                {headerText: "序号", dataField: "code", headerAlign: "center", dataAlign: "center"},
//                {headerText: "任务数",dataField: "task", headerAlign: "center", dataAlign: "center", width: "100"},
                {headerText: "抽样数", dataField: "sampling",headerAlign: "center", dataAlign: "center", width: "100",handler:"formatting"},
                {headerText: "检验数", dataField: "test",headerAlign: "center", dataAlign: "center", width: "100",handler:"formatting"},
                {headerText: "不合格数",dataField: "unqualified", headerAlign: "center", dataAlign: "center", width: "100",handler:"formatting"},
                {headerText: "合格数", dataField: "qualified",headerAlign: "center", dataAlign: "center", width: "100",handler:"formatting"},
                {headerText: "已处置", dataField: "Disposed",headerAlign: "center", dataAlign: "center", width: "100",handler:"formatting"},
                {headerText: "处置中", dataField: "Disposal",headerAlign: "center", dataAlign: "center", width: "100",handler:"formatting"}
            ],
            data: <%= raw @data %>
            //data:[
            //    {name: "报送分类a1", sampling:"128",test:"80",unqualified:"15",qualified:"65",Disposed:"13",Disposal:"2",},
            //    {name: "报送分类a", sampling:"82",test:"75",unqualified:"5",qualified:"70",Disposed:"5",Disposal:"0",children:[
            //        {name: "报送分类b", sampling:"82",test:"75",unqualified:"5",qualified:"70",Disposed:"5",Disposal:"0",children:[
            //            {name: "食品大类", sampling:"82",test:"75",unqualified:"5",qualified:"70",Disposed:"5",Disposal:"0",children: [
            //                {name: "食品亚类", sampling:"82",test:"75",unqualified:"5",qualified:"70",Disposed:"5",Disposal:"0",children:[
            //                    {name: "食品次亚类", sampling:"82",test:"75",unqualified:"5",qualified:"70",Disposed:"5",Disposal:"0",children:[
            //                        {name: "食品细类", sampling:"82",test:"75",unqualified:"5",qualified:"70",Disposed:"5",Disposal:"0",}
            //                        ]}
            //                ]},
            //            ]}
            //        ]},
            //        {name: "报送分类b1", sampling:"62",test:"35",unqualified:"3",qualified:"45",Disposed:"3",Disposal:"42",},
            //        {name: "报送分类b2", sampling:"20",test:"40",unqualified:"2",qualified:"25",Disposed:"6",Disposal:"19",},
            //        
            //    ]},{name: "总计",  sampling:"210",test:"155",unqualified:"20",qualified:"135",Disposed:"18",Disposal:"2", height:"200"},
            //]
        };

        $(document).ready(function(){
            $(".allcheck").click(function(){
                $("#tg1").find("input[name='cblbox']").attr("checked",$(this).attr("checked"));
            });
            $("#search").click(function(){
              $("#is_export").val("0");
            });
            $("#save").click(function(){
              $("#is_export").val("1");
            });

            // 时间区域选取
            // 初始时间
           /* laydate.render({
              elem: '#q_created_at_start', //指定元素
              type: 'month'
            });
            // 结束时间
            laydate.render({
              elem: '#q_created_at_end', //指定元素
              type: 'month'
            });*/
            laydate.render({
                elem: '#time', //指定元素
                type: 'month',
                range: '/',
                format: 'yyyy-MM'
            });

        });
        /*
            单击数据行后触发该事件
            id：行的id
            index：行的索引。
            data：json格式的行数据对象。
        */
        function itemClickEvent(id, index, data){


            jQuery("#currentRow").val(id + ", " + index + ", " + TreeGrid.json2str(data));
        }

        /*
            通过指定的方法来自定义栏数据
        */
        function customCheckBox(row, col){
            return "<input name='cblbox' type='checkbox'>";
        }

        function customOrgName(row, col){
            var name = row[col.dataField] || "";
            return name;
        }

        function customLook(row, col){

            return "<a href='javascript:void(0)' onclick='showrowname(\""+row.code+"\",\""+row.name+"\")' style='color:blue;'>查看</a>";
        }

        function showrowname(code , name){
            alert( code +  name );

        }

        //创建一个组件对象
        var treeGrid = new TreeGrid(config);
        treeGrid.show();

        /*
            展开、关闭所有节点。
            isOpen=Y表示展开，isOpen=N表示关闭
        */
        function expandAll(isOpen){
            treeGrid.expandAll(isOpen);
        }
        /***
         * 格式化
         * */
        function formatting(row, col){
            var num = 0;
            var name = "";
            var url = '';
            num = row[col.dataField].length;
            name = row[col.dataField] || [];
            if(col.dataField=='Disposed'||col.dataField=='Disposal'){
                url = 'hccz_particulars';
            }else{
                url = 'particulars';
            }
            var a = "<a href='javascript:void(0);' onclick = openPostWindow('"+name+"','"+url+"')>"+num+"</a>"
            return a;
        }
        //请求后台方法，弹出详情页面
        function openPostWindow(data,url){
            var tempForm = document.createElement("form");
            tempForm.id = "tempForm1";
            tempForm.method = "post";
            tempForm.action = url;
            tempForm.target="_blank"; //打开新页面
            var hideInput1 = document.createElement("input");
            hideInput1.type = "hidden";
            hideInput1.name="opid"; //后台要接受这个参数来取值
            hideInput1.value = data; //后台实际取到的值
          /*var hideInput2 = document.createElement("input");
           hideInput2.type = "hidden";
           hideInput2.name="xtmc";
           hideInput2.value = data2;  这里就是如果需要第二个参数的时候可以自己再设置*/
            tempForm.appendChild(hideInput1);
            //tempForm.appendChild(hideInput2);
            if(document.all){
                tempForm.attachEvent("onsubmit",function(){});        //IE
            }else{
                var subObj = tempForm.addEventListener("submit",function(){},false);    //firefox
            }
            document.body.appendChild(tempForm);
            if(document.all){
                tempForm.fireEvent("onsubmit");
            }else{
                tempForm.dispatchEvent(new Event("submit"));
            }
            tempForm.submit();
            document.body.removeChild(tempForm);
        }
        /*
            取得当前选中的行，方法返回TreeGridItem对象
        */
        function selectedItem(){
            var treeGridItem = treeGrid.getSelectedItem();
            if(treeGridItem!=null){
                //获取数据行属性值
                //alert(treeGridItem.id + ", " + treeGridItem.index + ", " + treeGridItem.data.name);

                //获取父数据行
                var parent = treeGridItem.getParent();
                if(parent!=null){
                    //jQuery("#currentRow").val(parent.data.name);
                }

                //获取子数据行集
                var children = treeGridItem.getChildren();
                if(children!=null && children.length>0){
                    jQuery("#currentRow").val(children[0].data.name);
                }
            }
        }
    </script>
</html>
